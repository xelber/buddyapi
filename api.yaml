swagger: '2.0'
info:
  description: Buddy API 1.2
  version: "1.2.0"
  title: Buddy API 1.2
  contact:
    email: hiranmilinda@gmail.com

schemes:
  - https
consumes: 
  - application/json
produces:
  - application/json

paths:
  /soh/inventory/search:
    post:
      summary: Get stock information for multiple item
      operationId: soh
      description: Get the current stock in hand by passing the sku and department ID. Multiples are allowd.
      tags:
        - stock
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/RequestIdHeader'
      - $ref: '#/parameters/APIVersionHeader'
      - $ref: '#/parameters/ContentTypeHeader'
      - $ref: '#/parameters/AcceptHeader'
      - in: body
        name: request
        description: Application user details used to login to the application
        required: true
        schema:
            $ref: '#/definitions/SOHRequest'
      responses:
        200:
          description: SKU found
          schema:
            $ref: '#/definitions/SOHResponse'
        400:
          $ref : '#/responses/BadInputResponse'
        404:
          $ref : '#/responses/NotFoundResponse'
        401:
          $ref : '#/responses/UnauthorizedResponse'
        406:
          $ref : '#/responses/IncorrectAcceptHeaderResponse'
        415:
          $ref : '#/responses/IncorrectContentTypeResponse'
  
  /pricematch/competitor/search:
    post:
      summary: Get competitor details for price match
      operationId: pricematch
      description: Get competitor details for price match
      tags:
        - pricematch
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/RequestIdHeader'
      - $ref: '#/parameters/APIVersionHeader'
      - $ref: '#/parameters/ContentTypeHeader'
      - $ref: '#/parameters/AcceptHeader'
      - in: body
        name: request
        description: Price Match Request
        required: true
        schema:
            $ref: '#/definitions/PriceMatchRequest'
      responses:
        200:
          description: List of competitors matching the context
          schema:
            $ref: '#/definitions/PriceMatchResponse'
        400:
          $ref : '#/responses/BadInputResponse'
        404:
          $ref : '#/responses/NotFoundResponse'
        401:
          $ref : '#/responses/UnauthorizedResponse'
        406:
          $ref : '#/responses/IncorrectAcceptHeaderResponse'
        415:
          $ref : '#/responses/IncorrectContentTypeResponse'
  
  /product/search/{query}:
    get:
      summary: Search Products
      operationId: product_search
      description: |
        Search through products. Query can be SKU, GTIN or product title
      tags:
        - product
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/RequestIdHeader'
      - $ref: '#/parameters/APIVersionHeader'
      - $ref: '#/parameters/AcceptHeader'
      - in: path
        name: query
        description: Search Query. Needs to be URL encoded. Can be search by name, SKU or GTIN
        required: true
        type: string
        
      responses:
        200:
          description: Product Search Results
          schema:
            $ref: '#/definitions/ProductSearchResponse'
        400:
          $ref : '#/responses/BadInputResponse'
        404:
          $ref : '#/responses/NotFoundResponse'
        401:
          $ref : '#/responses/UnauthorizedResponse'
        415:
          $ref : '#/responses/IncorrectContentTypeResponse'
          
  /product/{buddy-product-key}:
    get:
      summary: Get product details
      operationId: product_info
      description: Get product details for multiple products
      tags:
        - product
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/RequestIdHeader'
      - $ref: '#/parameters/APIVersionHeader'
      - $ref: '#/parameters/ContentTypeHeader'
      - $ref: '#/parameters/AcceptHeader'
      - in: path
        name: buddy-product-key
        description: Unique product identifier
        required: true
        type: string
      responses:
        200:
          description: Return product info
          schema:
            $ref: '#/definitions/ProductInfoResponse'
        400:
          $ref : '#/responses/BadInputResponse'
        404:
          $ref : '#/responses/NotFoundResponse'
        401:
          $ref : '#/responses/UnauthorizedResponse'
        415:
          $ref : '#/responses/IncorrectContentTypeResponse'
  
  /cart:
    post:
      summary: Initiate a cart.
      operationId: cart-init
      description: Create a cart and return a cart ID. Cart owner extracted from Authorization header.
      tags:
        - cart
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/RequestIdHeader'
      - $ref: '#/parameters/APIVersionHeader'
      - $ref: '#/parameters/ContentTypeHeader'
      - $ref: '#/parameters/AcceptHeader'
      responses:
        200:
          description: Cart Initiated
          schema:
            $ref: '#/definitions/Cart'
        400:
          $ref : '#/responses/BadInputResponse'
        404:
          $ref : '#/responses/NotFoundResponse'
        401:
          $ref : '#/responses/UnauthorizedResponse'
        406:
          $ref : '#/responses/IncorrectAcceptHeaderResponse'
        415:
          $ref : '#/responses/IncorrectContentTypeResponse'
          
  /cart/{cart-id}:
    get:
      summary: Get cart info
      operationId: cart-info
      description: Request cart info
      tags:
        - cart
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/RequestIdHeader'
      - $ref: '#/parameters/APIVersionHeader'
      - $ref: '#/parameters/ContentTypeHeader'
      - $ref: '#/parameters/AcceptHeader'
      - in: path
        name: cart-id
        required: true
        type: string
      responses:
        200:
          description: Cart found
          schema:
            $ref: '#/definitions/Cart'
        400:
          $ref : '#/responses/BadInputResponse'
        404:
          $ref : '#/responses/NotFoundResponse'
        401:
          $ref : '#/responses/UnauthorizedResponse'
        406:
          $ref : '#/responses/IncorrectAcceptHeaderResponse'
        415:
          $ref : '#/responses/IncorrectContentTypeResponse'
    delete:
      summary: Empty cart
      operationId: cart-delete
      description: Remove all items from cart
      tags:
        - cart
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/RequestIdHeader'
      - $ref: '#/parameters/APIVersionHeader'
      - $ref: '#/parameters/ContentTypeHeader'
      - $ref: '#/parameters/AcceptHeader'
      - in: path
        name: cart-id
        required: true
        type: string
      responses:
        200:
          description: Cart found
          schema:
            $ref: '#/definitions/Cart'
        400:
          $ref : '#/responses/BadInputResponse'
        404:
          $ref : '#/responses/NotFoundResponse'
        401:
          $ref : '#/responses/UnauthorizedResponse'
        406:
          $ref : '#/responses/IncorrectAcceptHeaderResponse'
        415:
          $ref : '#/responses/IncorrectContentTypeResponse'
          
  /cart/{cart-id}/item:
    post:
      summary: Add item to a cart.
      operationId: cart-add
      description: Adds the requested item to a given cart.
      tags:
        - cart
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/RequestIdHeader'
      - $ref: '#/parameters/APIVersionHeader'
      - $ref: '#/parameters/ContentTypeHeader'
      - $ref: '#/parameters/AcceptHeader'
      - in: path
        name: cart-id
        required: true
        type: string
      - in: body
        name: item
        description: Describe the product needs adding.
        required: true
        schema:
            $ref: '#/definitions/AddCartItem'
      responses:
        200:
          description: Item added to cart
          schema:
            $ref: '#/definitions/Cart'
        400:
          $ref : '#/responses/BadInputResponse'
        404:
          $ref : '#/responses/NotFoundResponse'
        401:
          $ref : '#/responses/UnauthorizedResponse'
        406:
          $ref : '#/responses/IncorrectAcceptHeaderResponse'
        415:
          $ref : '#/responses/IncorrectContentTypeResponse'
  
  /cart/{cart-id}/item/{cart-item-id}:
    patch:
      summary: Update item in a cart.
      operationId: cart-item-update
      description: Update requested item in a given cart.
      tags:
        - cart
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/RequestIdHeader'
      - $ref: '#/parameters/APIVersionHeader'
      - $ref: '#/parameters/ContentTypeHeader'
      - $ref: '#/parameters/AcceptHeader'
      - in: path
        name: cart-id
        required: true
        type: string
      - in: path
        name: cart-item-id
        required: true
        type: string
      - in: body
        name: item
        description: Describe the product needs adding.
        required: true
        schema:
            $ref: '#/definitions/AddCartItem'
      responses:
        200:
          description: Item added to cart
          schema:
            $ref: '#/definitions/Cart'
        400:
          $ref : '#/responses/BadInputResponse'
        404:
          $ref : '#/responses/NotFoundResponse'
        401:
          $ref : '#/responses/UnauthorizedResponse'
        406:
          $ref : '#/responses/IncorrectAcceptHeaderResponse'
        415:
          $ref : '#/responses/IncorrectContentTypeResponse'
    delete:
      summary: Remove item in a cart.
      operationId: cart-item-delete
      description: Remove requested item in a given cart.
      tags:
        - cart
      parameters:
      - $ref: '#/parameters/AuthorizationHeader'
      - $ref: '#/parameters/RequestIdHeader'
      - $ref: '#/parameters/APIVersionHeader'
      - $ref: '#/parameters/ContentTypeHeader'
      - $ref: '#/parameters/AcceptHeader'
      - in: path
        name: cart-id
        required: true
        type: string
      - in: path
        name: cart-item-id
        required: true
        type: string
      responses:
        200:
          description: Item Removed
          schema:
            $ref: '#/definitions/Cart'
        400:
          $ref : '#/responses/BadInputResponse'
        404:
          $ref : '#/responses/NotFoundResponse'
        401:
          $ref : '#/responses/UnauthorizedResponse'
        406:
          $ref : '#/responses/IncorrectAcceptHeaderResponse'
        415:
          $ref : '#/responses/IncorrectContentTypeResponse'

parameters:
  AuthorizationHeader:
    in: header
    name: Authorization
    description: "\"Authorization: <API Key>\" API System Key identifies the Service making this specific request."
    required: true
    type: string
    
  RequestIdHeader:
    in: header
    name: X-Request-ID
    description: SessionUUID generated by the Initiating Consumer System per request – allows end-end tracking & auditing
    required: true
    type: string
  
  APIVersionHeader:
    in: header
    name: X-API-Version
    description: Specific API version that the Initiating Consumer System is using as its integration definition
    required: true
    type: string
  
  ContentTypeHeader:
    in: header
    name: Content-Type
    description: application/json – permanent value stating that associated request payload is being passed in JSON
    required: true
    type: string
  
  AcceptHeader:
    in: header
    name: Accept
    description: application/json – permanent value stating that representation response needs to be JSON
    required: true
    type: string

responses:
  UnauthorizedResponse: 
    description: "Unauthorized"
  BadInputResponse: 
    description: "Bad input parameter"
  NotFoundResponse: 
    description: "Item not found"
  IncorrectAcceptHeaderResponse: 
    description: "Incorrect accept header - only application/json at present"
  IncorrectContentTypeResponse: 
    description: "Incorrect content type header - only application/json at present"

definitions:
  
  ResponseHeader:
    type: object
    required:
    - RequestId
    - HttpResponseCode
    - Messages
    properties:
      RequestId:
        type: string
        example: "6016cf28-c095-4c9a-a713-6df65d30e772"
      HttpResponseCode:
        type: integer
        example: 200
      Messages:
        type: string
        example: "OK"
  
  SOHRequest:
    type: object
    required:
    - Items
    properties:
      Items:
        type: array
        items:
          $ref: '#/definitions/SOHRequestedItem'
  
  SOHRequestedItem:
    type: object
    required:
    - Sku
    - DepartmentId
    properties:
      Sku:
        type: string
        example: "48942893"
      DepartmentId:
        type: string
        example: "060"
        
  SOHResponse:
    type: object
    required:
    - ResponseHeader
    - InventoryItems
    properties:
      ResponseHeader:
        $ref: '#/definitions/ResponseHeader'
      InventoryItems:
        type: array
        items:
          $ref: '#/definitions/InventoryItem'
  
  InventoryItem:
    type: object
    required:
    - Sku
    - DepartmentId
    - AvailableSoh
    - StockOnHand
    - ReservedCount
    - OnOrderCount
    - FrozenCount
    - OnlineOrderedCount
    - LastUpdate
    - SellPrice
    properties:
      Sku:
        type: string
        example: "X0390"
      DepartmentId:
        type: string
        example: "060"
      StockOnHand:
        type: number
        example: 10
      ReservedCount:
        type: number
        example: 2
      OnOrderCount:
        type: number
        example: 20
      FrozenCount:
        type: number
        example: 1
      OnlineOrderedCount:
        type: number
        example: 1
      AvailableSoh:
        type: number
        example: 1
      LastUpdate:
        type: string
        example: "2017-02-20T09:48:54.000+11:00"
      SellPrice:
        type: number
        example: 299.96
  
  PriceMatchRequest:
    type: object
    required:
    - Context
    properties:
      Context:
        $ref: '#/definitions/PriceMatchContext'
  
  PriceMatchContext:
    type: object
    required:
    - StoreId
    - DepartmentId
    - State
    - Postcode
    - Brand
    properties:
      StoreId:
        type: string
        example: "0601"
      DepartmentId:
        type: string
        example: "062"
      State:
        type: string
        example: "NSW"
      Postcode:
        type: string
        example: "2140"
      Brand:
        type: string
        example: "Harvey Norman"
    
  PriceMatchResponse:
    type: object
    required:
    - ResponseHeader
    - Competitor
    properties:
      ResponseHeader:
        $ref: '#/definitions/ResponseHeader'
      Competitor:
        type: array
        items:
          $ref: '#/definitions/PriceMatchCompetitor'
  
  PriceMatchCompetitor:
    type: object
    required:
    - Id
    - Name
    - Description
    - SearchUrl
    - LogoUrl
    - QueryBy
    properties:
      Id:
        type: integer
        example: 1
      Name:
        type: string
        example: "jbhifi"
      Description:
        type: string
        example: "jbhifi"
      SearchUrl:
        type: string
        example: "https://www.jbhifi.com.au/?q={QUERY}&"
      LogoUrl:
        type: string
        example: "https://www.jbhifi.com.au/img/img_logo-bp3.png"
      QueryBy:
        type: string
        example: "SKU"
        
  ProductSearchResponse:
    type: object
    required:
    - ResponseHeader
    - SearchResults
    properties:
      ResponseHeader:
        $ref: '#/definitions/ResponseHeader'
      SearchResults:
        type: array
        items:
          $ref: '#/definitions/ProductSearchResult'
  
  ProductSearchResult:
    type: object
    required:
    - ResultCount
    - SearchResult
    properties:
      ResultCount:
        type: integer
        example: 8
      SearchResult:
        type: array
        items:
          $ref: '#/definitions/ProductSearchResultItem'
  
  ProductSearchResultItem:
    type: object
    required:
    - BuddyProductKey
    - Sku
    - DepartmentId
    - Name
    - SellPrice
    properties:
      BuddyProductKey:
        type: string
        example: "060-X0390"
        description : "Uniquely identify product for buddy. Composite key of department id and sku"
      Sku:
        type: string
        example: "X0390"
      DepartmentId:
        type: string
        example: "060"
      Name:
        type: string
        example: "HP Spectre X360 13-AC001TU 2-in-1 13\" Laptop - Rose Gold"
        description : "SAP Name"
      SellPrice:
        type: number
        example: 299.96
      OnlineName:
        type: string
        example: "HP Spectre X360 13-AC001TU 2-in-1 13\" Laptop - Rose Gold"
        description : "Magento name. Optional."
  
  ProductInfoResponse:
    type: object
    required:
    - ResponseHeader
    - Product
    properties:
      ResponseHeader:
        $ref: '#/definitions/ResponseHeader'
      Product:
        $ref: '#/definitions/ProductItemInfo'
  
  ProductItemInfo:
    description: "Represent an object with product info. All basic data are derived from SAP data unless prefixed with 'Online' e.g. OnlineName. ExtendedProductData will contain all the online attributes with key value and label."
    type: object
    required:
    - BuddyProductKey
    - Sku
    - DepartmentId
    - GTIN
    - Name
    - Name2
    - Category
    - Group
    - Class
    - SupplierId
    - SellPrice
    - CostPrice
    - Warranty
    - Brand
    - Model
    
    properties:
      BuddyProductKey:
        type: string
        example: "060-X0390"
        description : "Uniquely identify product for buddy. Composite key of department id and sku"
      Sku:
        type: string
        example: "X0390"
      GTIN:
        type: string
        example: "8208238032809"
      DepartmentId:
        type: string
        example: "060"
      Name:
        type: string
        example: "X360 13-AC001TU 2-in-1 13"
      Name2:
        type: string
        example: "HP Spectre X360 13-AC001TU 2-in-1 13\" Laptop - Rose Gold"
      Category:
        type: string
        example: "NBK"
      Group:
        type: string
        example: "HAR"
      Class:
        type: string
        example: "C17"
      SupplierId:
        type: string
        example: "300161"
      SellPrice:
        type: number
        example: 299.96
      CostPrice:
        type: number
        example: 299.96
      Warranty:
        type: string
        example: "12 Months"
      Brand:
        type: string
        example: "HP"
      Model:
        type: string
        example: "HP SPECTRE X360 13-W"
      OnlineName:
        type: string
        example: "HP Spectre X360 13-AC001TU 2-in-1 13\" Laptop - Rose Gold"
      OnlineImageUrl:
        type: string
        example: "https://doxz7msmg7sxx.cloudfront.net/media/catalog/product/cache/21/image/992x558/9df78eab33525d08d6e5fb8d27136e95/s/p/spectre_x360_1.jpg"
      OnlineThumbnailUrl:
        type: string
        example: "https://doxz7msmg7sxx.cloudfront.net/media/catalog/product/cache/21/image/992x558/9df78eab33525d08d6e5fb8d27136e95/s/p/spectre_x360_1.jpg"
      ExtendedProductData:
        type: array
        items:
          $ref: '#/definitions/ExtendedProductData'
  
  ExtendedProductData:
    type: object
    required:
    - Key
    - Label
    - Value
    properties:
      Key:
        type: string
        example: "def_cartridge_number"
      Label:
        type: string
        example: "Cartridge Number"
      Value:
        type: string
        example: "X94384J"
        
  Cart:
    type: object
    required:
    - CartId
    - Owner
    - Totals
    - CraetedDate
    - LastUpdatedDate
    properties:
      CartId:
        type: string
        example: "42803280328908"
      Owner:
        $ref : '#/definitions/CartOwner'
      Items:
        type: array
        items : 
          $ref : '#/definitions/CartItem'
      Totals:
        $ref : '#/definitions/CartTotals'
      CraetedDate:
        type: string
        example: "42803280328908"
      LastUpdatedDate:
        type: string
        example: "42803280328908"
  
  CartOwner:
    type: object
    required:
    - SalesPerson
    - StoreId
    - DepartmentId
    properties:
      SalesPerson:
        type: string
        example: "Jo Burn"
      StoreId:
        type: string
        example: "01"
      DepartmentId:
        type: string
        example: "063"
  
  CartItem:
    type: object
    required:
    - LineId
    - Name
    - SKU
    - Qty
    - OriginalUnitPrice
    - UnitPrice
    - UnitCost
    - Discount
    - LineTotal
    - LineTax
    allOf:
      - properties:
          LineId:
            type: string
            example: "42803280328908"
          Discount:
            type: number
            example: 300.00
          LineTotal:
            type: number
            example: 2400.00
          LineTax:
            type: number
            example: 200.00
      - $ref: '#/definitions/AddCartItem'
      
  CartTotals:
    type: object
    required:
    - ItemCount
    - SubTotal
    - Discount
    - Total
    - Tax
    - Cost
    - TaxPercentage
    properties:
      ItemCount:
        type: integer
        example: 1
      SubTotal:
        type: number
        example: 2500.00
      Discount:
        type: number
        example: 1900.00
      Total:
        type: number
        example: 2400.00
      Tax:
        type: number
        example: 200.00
      TaxPercentage:
        type: number
        example: 200.00
      Cost:
        type: number
        example: 200.00
        
  AddCartItem:
    type: object
    required:
    - Name
    - SKU
    - Qty
    - UnitPrice
    - OriginalUnitPrice
    - UnitCost
    properties:
      Name:
        type: string
        example: "GARMIN FORERUNNER 405 BLACK"
      SKU:
        type: string
        example: "010-00658-24"
      Qty:
        type: integer
        example: 1
      OriginalUnitPrice:
        type: number
        example: 2500.00
      UnitPrice:
        type: number
        example: 2500.00
      UnitCost:
        type: number
        example: 1900.00
      ProductCareCost:
        type: number
        example: 200.00
# Added by API Auto Mocking Plugin
#host: virtserver.swaggerhub.com
host: www-buddy-dev3.dev.hndigital.cloud
basePath: /v1